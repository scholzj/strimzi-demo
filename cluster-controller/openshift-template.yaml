---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: strimzi-cluster-controller
  labels:
    app: strimzi
---
apiVersion: v1
kind: ClusterRole
metadata:
  name: strimzi-cluster-controller-role
  labels:
    app: strimzi
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - "extensions"
  resources:
  - deployments
  - deployments/scale
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - "apps"
  resources:
  - deployments
  - deployments/scale
  - deployments/status
  - statefulsets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
---
apiVersion: v1
kind: RoleBinding
metadata:
  name: strimzi-cluster-controller-binding
  labels:
    app: strimzi
subjects:
  - kind: ServiceAccount
    name: strimzi-cluster-controller
roleRef:
  kind: ClusterRole
  name: strimzi-cluster-controller-role
  apiGroup: v1
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: strimzi-cluster-controller
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: strimzi-cluster-controller
    spec:
      serviceAccountName: strimzi-cluster-controller
      containers:
        - name: strimzi-cluster-controller
          image: scholzj/cluster-controller:latest
          env:
            - name: STRIMZI_CONTROLLER_LABELS
              value: "app=strimzi,kind=cluster"
            - name: STRIMZI_CONTROLLER_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: Template
metadata:
  name: strimzi
  annotations:
    openshift.io/display-name: "Apache Kafka (Ephemeral storage)"
    description: >-
      This template installes Apache Zookeeper and Apache Kafka clusters. For more information
      about using this template see https://github.com/strimzi/strimzi


      WARNING: Any data stored will be lost upon pod destruction. Only use this
      template for testing."
    tags: "messaging,datastore"
    iconClass: "fa fa-share-alt fa-flip-horizontal"
    template.openshift.io/documentation-url: "https://github.com/strimzi/strimzi"
message: "Use 'kafka:9092' as bootstrap server in your application"
parameters:
- description: Number of Zookeper cluster nodes which will be deployed (odd number of nodes is recomended)
  displayName: Number of Zookeper cluster nodes (odd number of nodes is recomended)
  name: ZOOKEEPER_NODE_COUNT
  required: true
  value: "1"
- description: Number of Kafka cluster nodes which will be deployed
  displayName: Number of Kafka cluster nodes
  name: KAFKA_NODE_COUNT
  required: true
  value: "3"
- description: Image repository name
  displayName: Repository Name
  name: IMAGE_REPO_NAME
  value: strimzi 
- description: Kafka image name
  displayName: Kafka image Name
  name: KAFKA_IMAGE_NAME
  value: kafka-statefulsets
- description: Kafka image tag
  displayName: Kafka image tag
  name: KAFKA_IMAGE_TAG
  value: latest
- description: Zookeeper image name
  displayName: Zookeeper image Name
  name: ZOOKEEPER_IMAGE_NAME
  value: zookeeper
- description: Zookeeper image tag
  displayName: Zookeeper image tag
  name: ZOOKEEPER_IMAGE_TAG
  value: latest
- description: Number of seconds after the container has started before healthcheck probes are initiated.
  displayName: Zookeeper healthcheck initial delay
  name: ZOOKEEPER_HEALTHCHECK_DELAY
  value: "15"
- description: Number of seconds after which the probe times out.
  displayName: Zookeeper healthcheck timeout
  name: ZOOKEEPER_HEALTHCHECK_TIMEOUT
  value: "5"
- description: Number of seconds after the container has started before healthcheck probes are initiated.
  displayName: Kafka healthcheck initial delay
  name: KAFKA_HEALTHCHECK_DELAY
  value: "15"
- description: Number of seconds after which the probe times out.
  displayName: Kafka healthcheck timeout
  name: KAFKA_HEALTHCHECK_TIMEOUT
  value: "5"
- description: Default replication factor for newly created topics
  displayName: Default replication factor
  name: KAFKA_DEFAULT_REPLICATION_FACTOR
  value: "1"
- description: Replication factor for offsets topic
  displayName: Offsets replication factor
  name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
  value: "3"
- description: Replication factor for transactions state log topic
  displayName: Transaction state replication factor
  name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
  value: "3"
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: kafka
    labels:
      app: strimzi
      type: kafka
      kind: cluster
  data:
    kafka-nodes: "${KAFKA_NODE_COUNT}"
    kafka-image: "${IMAGE_REPO_NAME}/${KAFKA_IMAGE_NAME}:${KAFKA_IMAGE_TAG}"
    kafka-healthcheck-delay: "${KAFKA_HEALTHCHECK_DELAY}"
    kafka-healthcheck-timeout: "${KAFKA_HEALTHCHECK_TIMEOUT}"
    zookeeper-nodes: "${ZOOKEEPER_NODE_COUNT}"
    zookeeper-image: "${IMAGE_REPO_NAME}/${ZOOKEEPER_IMAGE_NAME}:${ZOOKEEPER_IMAGE_TAG}"
    zookeeper-healthcheck-delay: "${ZOOKEEPER_HEALTHCHECK_DELAY}"
    zookeeper-healthcheck-timeout: "${ZOOKEEPER_HEALTHCHECK_TIMEOUT}"
    KAFKA_DEFAULT_REPLICATION_FACTOR: "${KAFKA_DEFAULT_REPLICATION_FACTOR}"
    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "${KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR}"
    KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "${KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR}"
    kafka-metrics-config: |-
      {
        "lowercaseOutputName": true,
        "rules": [
            {
              "pattern": "kafka.server<type=(.+), name=(.+)PerSec\\w*><>Count",
              "name": "kafka_server_$1_$2_total"
            },
            {
              "pattern": "kafka.server<type=(.+), name=(.+)PerSec\\w*, topic=(.+)><>Count",
              "name": "kafka_server_$1_$2_total",
              "labels":
              {
                "topic": "$3"
              }
            }
        ]
      }
    zookeeper-metrics-config: |-
      {
        "lowercaseOutputName": true
      }
---
apiVersion: v1
kind: Template
metadata:
  name: strimzi-connect
  annotations:
    openshift.io/display-name: "Apache Kafka Connect"
    description: >-
      This template installes Apache Kafka Connect in distributed mode. For more information
      about using this template see https://github.com/strimzi/strimzi
    tags: "messaging"
    iconClass: "fa fa-exchange"
    template.openshift.io/documentation-url: "https://github.com/strimzi/strimzi"
message: "Use 'kafka-connect:8083' to access Kafka Connect REST API."
parameters:
- description: Specifies the number of Kafka Connect instances to be started by default.
  displayName: Number of Kafka Connect instances
  name: INSTANCES
  required: true
  value: "1"
- description: A list of host:port pairs to use for establishing the initial connection to the Kafka cluster.
  displayName: Kafka bootstrap servers
  name: KAFKA_CONNECT_BOOTSTRAP_SERVERS
  required: true
  value: kafka:9092
- description: A unique string that identifies the Connect cluster group this worker belongs to. Note this must not conflict with any consumer group IDs.
  displayName: Group ID
  name: KAFKA_CONNECT_GROUP_ID
  required: true
  value: connect-cluster
- description: Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka.
  displayName: Key Converter
  name: KAFKA_CONNECT_KEY_CONVERTER
  required: true
  value: org.apache.kafka.connect.json.JsonConverter
- description: Set to false to use schemaless format
  displayName: Enable schemas for key converters
  name: KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
  value: "true"
- description: Converter class used to convert between Kafka Connect format and the serialized form that is written to Kafka.
  displayName: Value Converter
  name: KAFKA_CONNECT_VALUE_CONVERTER
  required: true
  value: org.apache.kafka.connect.json.JsonConverter
- description: Set to false to use schemaless format
  displayName: Enable schemas for value converters
  name: KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
  value: "true"
- description: Replication factor for config storage topic
  displayName: Config replication factor
  name: KAFKA_CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
  value: "3"
- description: Replication factor for offset storage topic
  displayName: Offset replication factor
  name: KAFKA_CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
  value: "3"
- description: Replication factor for status storage topic
  displayName: Status replication factor
  name: KAFKA_CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
  value: "3"
- description: Image repository name
  displayName: Repository Name
  name: IMAGE_REPO_NAME
  value: strimzi
- description: Image name
  displayName: Image Name
  name: IMAGE_NAME
  value: kafka-connect
- description: Image tag
  displayName: Image tag
  name: IMAGE_TAG
  value: latest
- description: Number of seconds after the container has started before healthcheck probes are initiated.
  displayName: Kafka Connect healthcheck initial delay
  name: HEALTHCHECK_DELAY
  value: "60"
- description: Number of seconds after which the probe times out.
  displayName: Kafka Connect healthcheck timeout
  name: HEALTHCHECK_TIMEOUT
  value: "5"
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: kafka-connect
    labels:
      app: strimzi
      kind: cluster
      type: kafka-connect
  data:
    nodes: "${INSTANCES}"
    image: "${IMAGE_REPO_NAME}/${IMAGE_NAME}:${IMAGE_TAG}"
    healthcheck-delay: "${HEALTHCHECK_DELAY}"
    healthcheck-timeout: "${HEALTHCHECK_TIMEOUT}"
    KAFKA_CONNECT_BOOTSTRAP_SERVERS: "${KAFKA_CONNECT_BOOTSTRAP_SERVERS}"
    KAFKA_CONNECT_GROUP_ID: "${KAFKA_CONNECT_GROUP_ID}"
    KAFKA_CONNECT_KEY_CONVERTER: "${KAFKA_CONNECT_KEY_CONVERTER}"
    KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "${KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE}"
    KAFKA_CONNECT_VALUE_CONVERTER: "${KAFKA_CONNECT_VALUE_CONVERTER}"
    KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "${KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE}"
    KAFKA_CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "${KAFKA_CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR}"
    KAFKA_CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "${KAFKA_CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR}"
    KAFKA_CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "${KAFKA_CONNECT_STATUS_STORAGE_REPLICATION_FACTOR}"
